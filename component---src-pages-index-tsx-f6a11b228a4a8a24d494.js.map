{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-breakpoints/withBreakpoints.js","webpack:///./src/components/contentWrap.tsx","webpack:///./src/components/hero.tsx","webpack:///./src/components/downloadMochi.tsx","webpack:///./src/components/accessCounter.tsx","webpack:///./src/components/daysFromFoundation.tsx","webpack:///./src/components/randomWord.tsx","webpack:///./src/components/information.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/marquee.tsx","webpack:///./node_modules/gatsby-plugin-breakpoints/index.js"],"names":["_interopRequireDefault","require","exports","__esModule","withBreakpoints","_extends2","_react","_BreakpointProvider","Component","props","breakpoints","useBreakpoint","default","createElement","BackGroundWrap","styled","div","bgImg","ContentWrap","children","data","useStaticQuery","publicURL","HeroContainer","ScaffoldContainer","LogoContainer","ButtonContainer","Hero","useState","isUnderConstruction","setIsUnderConstruction","onClick","src","logo","alt","fluid","scaffold","childImageSharp","templeNight","Container","TextContainer","ImgContainer","DownloadMochi","text","delay","duration","red","white","AccessCounterContent","NumberText","span","AccessCounter","accessStr","setAccessStr","useEffect","fetch","then","response","json","String","padStart","catch","error","map","str","index","key","Content","DaysFromFoundation","START_TIME","Date","getTime","TIME_DIFF","now","daysFromStr","Math","floor","RandomWordWrap","attrs","isMobile","FlexWrap","ImgWrap","Title","h2","ParagraphWrap","RandomWord","node","allHitokotoCsv","nodes","number","random","length","sm","file","word","List","ul","Item","li","ItemChild","ItemChildDate","ItemChildText","Information","informationItems","allInformationCsv","date","url","test","href","to","MainContents","CatchTextWrap","ComponentWrap","pageQuery","IndexPage","title","site","siteMetadata","meta","name","content","description","MarqueeWrap","marqueeAnimation","keyframes","Paragraph","p","Marquee","BreakpointProvider","_withBreakpoints"],"mappings":"2FAEA,IAAIA,EAAyBC,EAAQ,QAErCC,EAAQC,YAAa,EACrBD,EAAQE,qBAAkB,EAE1B,IAAIC,EAAYL,EAAuBC,EAAQ,SAE3CK,EAASN,EAAuBC,EAAQ,SAExCM,EAAsBN,EAAQ,QAWlCC,EAAQE,gBATgB,SAAAI,GACtB,OAAO,SAAAC,GACL,IAAMC,GAAc,EAAIH,EAAoBI,iBAC5C,OAAoBL,EAAOM,QAAQC,cAAcL,GAAW,EAAIH,EAAUO,SAAS,CACjFF,YAAaA,GACZD,O,qKCVDK,G,UAAiBC,IAAOC,IAAV,iFAAGD,CAAH,kFAEM,SAACN,GAAD,OAAkBA,EAAMQ,UAkBnCC,EAde,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACzBC,EAAOC,YAAe,WAQ5B,OACE,gBAACP,EAAD,CAAgBG,MAAOG,EAAKH,MAAMK,WAAYH,I,6CCnB5CI,EAAgBR,IAAOC,IAAV,yEAAGD,CAAH,iDAKbS,EAAoBT,IAAOC,IAAV,6EAAGD,CAAH,iKAgBjBU,EAAgBV,IAAOC,IAAV,yEAAGD,CAAH,8IAebW,EAAkBX,IAAOC,IAAV,2EAAGD,CAAH,gDA0DNY,EAnDF,WACX,IAAMP,EAAOC,YAAe,cADX,EAyBqCO,oBAAS,GAAxDC,EAzBU,KAyBWC,EAzBX,KA2BjB,OACE,kBAACP,EAAD,KACE,kBAACG,EAAD,KACE,4BAAQK,QAAS,kBAAMD,GAAwBD,KAC5CA,EAAsB,KAAO,QAGlC,kBAACJ,EAAD,KACE,6BACE,yBAAKO,IAAKZ,EAAKa,KAAKX,UAAWY,IAAI,sBAGvC,kBAACV,EAAD,KACE,6BACGK,GACC,kBAAC,IAAD,CAAKM,MAAOf,EAAKgB,SAASC,gBAAgBF,UAIhD,kBAAC,IAAD,CAAKA,MAAOf,EAAKkB,YAAYD,gBAAgBF,U,YCzF7CI,EAAYxB,IAAOC,IAAV,+EAAGD,CAAH,oEAMTyB,EAAgBzB,IAAOC,IAAV,mFAAGD,CAAH,uDAMb0B,EAAe1B,IAAOC,IAAV,kFAAGD,CAAH,gEA0CH2B,EAnCO,WACpB,IAAMtB,EAAOC,YAAe,cAW5B,OACE,gBAACkB,EAAD,KACE,gBAACC,EAAD,KACE,gBAAC,IAAD,CACEG,KAAK,sDACLC,MAAM,KACNC,SAAS,SAGb,gBAACJ,EAAD,KACE,4CACA,2BACA,uBAAKT,IAAKZ,EAAK0B,IAAIxB,UAAWY,IAAI,SAClC,uBAAKF,IAAKZ,EAAK2B,MAAMzB,UAAWY,IAAI,SACpC,uBAAKF,IAAKZ,EAAK0B,IAAIxB,UAAWY,IAAI,SAClC,uBAAKF,IAAKZ,EAAK2B,MAAMzB,UAAWY,IAAI,SACpC,uBAAKF,IAAKZ,EAAK0B,IAAIxB,UAAWY,IAAI,SAClC,uBAAKF,IAAKZ,EAAK2B,MAAMzB,UAAWY,IAAI,Y,YClDtCc,EAAuBjC,IAAOC,IAAV,0FAAGD,CAAH,qBAIpBkC,EAAalC,IAAOmC,KAAV,gFAAGnC,CAAH,gGAqCDoC,EA7BiB,WAAoB,MAChBvB,mBAAS,WAApCwB,EAD2C,KAChCC,EADgC,KAkBlD,OAhBAC,qBAAU,WACRC,MACE,mGAECC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAE,GAEJ,OADAL,EAAaM,OAAOD,EAAI,aAAiBE,SAAS,EAAG,MAC9CF,KAERG,OAAM,SAAAC,GACLT,EAAa,cAEhB,IAGD,kBAACL,EAAD,YAEG,YAAII,GAAWW,KAAI,SAACC,EAAKC,GACxB,OAAO,kBAAChB,EAAD,CAAYiB,IAAKF,EAAML,OAAOM,IAASD,MAHlD,aC/BEG,EAAUpD,IAAOC,IAAV,kFAAGD,CAAH,qBAIPkC,EAAalC,IAAOmC,KAAV,qFAAGnC,CAAH,gGAyBDqD,EAjBY,WACzB,IAAMC,EAAa,IAAIC,KAAK,cAAcC,UAEpCC,EADeF,KAAKG,MACOJ,EAC3BK,EAAcf,OAAOgB,KAAKC,MAAMJ,EAAY,QAElD,OACE,gBAACL,EAAD,YAEG,YAAIO,GAAaX,KAAI,SAACC,EAAKC,GAC1B,OAAO,gBAAC,EAAD,CAAYC,IAAKF,EAAML,OAAOM,IAASD,MAHlD,SCbEa,EAAiB9D,IAAOC,IAAI8D,OAAM,SAACrE,GAAD,MAAmB,CACzDsE,SAAUtE,EAAMsE,aADE,iFAAGhE,CAAH,uFAMA,SAAAN,GAAK,OAAKA,EAAMsE,SAAW,SAAW,SAGpDC,EAAWjE,IAAOC,IAAI8D,OAAM,SAACrE,GAAD,MAAmB,CACnDsE,SAAUtE,EAAMsE,aADJ,2EAAGhE,CAAH,gFAGA,SAAAN,GAAK,OAAKA,EAAMsE,SAAW,OAAS,SAM5CE,EAAUlE,IAAOC,IAAV,0EAAGD,CAAH,mBAIPmE,EAAQnE,IAAOoE,GAAV,wEAAGpE,CAAH,sDAMLqE,EAAgBrE,IAAOC,IAAI8D,OAAM,SAACrE,GAAD,MAAmB,CACxDsE,SAAUtE,EAAMsE,aADC,gFAAGhE,CAAH,iIAGL,SAAAN,GAAK,OAAKA,EAAMsE,SAAW,OAAS,SA4CnCM,EAlCI,WACjB,IAAMjE,EAAOC,YAAe,cActBX,EAAcC,0BACd2E,EAAOlE,EAAKmE,eAAeC,MAC3BC,EAASd,KAAKC,MAAMD,KAAKe,SAAWJ,EAAKK,QAE/C,OACE,gBAACd,EAAD,CAAgBE,SAAUrE,EAAYkF,IACpC,gBAACZ,EAAD,KACE,gBAACC,EAAD,KACE,uBAAKjD,IAAKZ,EAAKyE,KAAKvE,UAAWY,IAAI,QAErC,gBAACgD,EAAD,oBAEF,gBAACE,EAAD,CAAeL,SAAUrE,EAAYkF,IACnC,yBAAIN,EAAKG,GAAQK,SC9DnBZ,EAAQnE,IAAOoE,GAAV,yEAAGpE,CAAH,gEAMLgF,EAAOhF,IAAOiF,GAAV,wEAAGjF,CAAH,yCAKJkF,EAAOlF,IAAOmF,GAAV,wEAAGnF,CAAH,kMAiBJoF,EAAYpF,IAAOC,IAAV,6EAAGD,CAAH,mBAITqF,EAAgBrF,YAAOoF,GAAV,iFAAGpF,CAAH,mBAIbsF,EAAgBtF,YAAOoF,GAAV,iFAAGpF,CAAH,8DAmDJuF,EA3CK,WAClB,IAcMC,EAdwBlF,YAAe,cAcfmF,kBAAkBhB,MAAMzB,KAAI,SAACuB,EAAMrB,GAC/D,IAAMtB,EAAU2C,EAAK3C,KAAX,MACV,OACE,gBAACsD,EAAD,CAAM/B,IAAKD,GACT,gBAACmC,EAAD,KACE,4BAAOd,EAAKmB,OAEd,gBAACJ,EAAD,KACIf,EAAKoB,IAEH,eAAeC,KAAKrB,EAAKoB,KAC3B,qBAAGE,KAAMtB,EAAKoB,KAAM/D,GAEpB,gBAAC,IAAD,CAAMkE,GAAIvB,EAAKoB,KAAM/D,GAJrB,yBAAIA,QAWd,OACE,2BACE,gBAAC,EAAD,aACA,gBAACoD,EAAD,KAAOQ,K,YChFPhE,EAAYxB,IAAOC,IAAV,uEAAGD,CAAH,qCAKT+F,EAAe/F,IAAOC,IAAV,0EAAGD,CAAH,6BAIZgG,EAAgBhG,IAAOC,IAAV,2EAAGD,CAAH,4IAYbiG,EAAgBjG,IAAOC,IAAV,2EAAGD,CAAH,oBAIbiE,EAAWjE,IAAOC,IAAI8D,OAAM,SAACrE,GAAD,MAA4B,CAC5DsE,SAAUtE,EAAMsE,aADJ,sEAAGhE,CAAH,oFAKM,SAAAN,GAAK,OAAKA,EAAMsE,SAAW,SAAW,SAuE7CkC,GAFEC,UAnD6B,SAAC,GAAa,IAAX9F,EAAW,EAAXA,KACvCV,EAAcC,0BAEpB,OACE,2BACE,gBAAC,IAAD,CACEwG,MAAO/F,EAAKgG,KAAKC,aAAaF,MAC9BG,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAASpG,EAAKgG,KAAKC,aAAaI,gBAG3D,gBAAC,EAAD,KACE,gBAAC,IAAD,MACA,gBAAC,EAAD,MACA,gBAAC,EAAD,MACA,gBAAC,IAAD,MACA,gBAAC,EAAD,KACE,4BACE,gBAAC,IAAD,CAAS9E,KAAK,mDACd,gBAACmE,EAAD,KACE,gBAACC,EAAD,KACE,2CAEE,2BAFF,yCAIE,2BAJF,iCAQF,gBAACC,EAAD,KACE,gBAAC,EAAD,CAAUjC,SAAUrE,EAAYkF,IAC9B,gBAAC,EAAD,MACA,gBAAC,EAAD,QAGJ,gBAACoB,EAAD,KACE,gBAAC,EAAD,OAEF,gBAACA,EAAD,KACE,gBAAC,EAAD,OAEF,gBAAC,IAAD,CAAMH,GAAG,YAAT,mBAIN,gBAAC,IAAD,SAQiB,e,kCCvHzB,4BASMa,EAAc3G,IAAOC,IAAV,2EAAGD,CAAH,6EAMX4G,EAAmBC,YAAH,uEAIhBC,EAAY9G,IAAO+G,EAAV,yEAAG/G,CAAH,mRAMK4G,GAEI,SAAClH,GAAD,OAAkBA,EAAMoC,UAAY,SAEvC,SAACpC,GAAD,OAAkBA,EAAMmC,OAAS,QAgBvCmF,IARC,SAACtH,GACf,OACE,gBAACiH,EAAD,KACE,gBAACG,EAAcpH,EAAQA,EAAMkC,S,kCCtCnCzC,EAAQC,YAAa,EAErB,IAAII,EAAsBN,EAAQ,QAElCC,EAAQS,cAAgBJ,EAAoBI,cAC5CT,EAAQ8H,mBAAqBzH,EAAoByH,mBAEjD,IAAIC,EAAmBhI,EAAQ,QAE/BC,EAAQE,gBAAkB6H,EAAiB7H","file":"component---src-pages-index-tsx-f6a11b228a4a8a24d494.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.withBreakpoints = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _BreakpointProvider = require(\"./BreakpointProvider\");\n\nconst withBreakpoints = Component => {\n  return props => {\n    const breakpoints = (0, _BreakpointProvider.useBreakpoint)();\n    return /*#__PURE__*/_react.default.createElement(Component, (0, _extends2.default)({\n      breakpoints: breakpoints\n    }, props));\n  };\n};\n\nexports.withBreakpoints = withBreakpoints;","import * as React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\n\ntype Props = {\n  bgImg: string\n}\n\nconst BackGroundWrap = styled.div`\n  background-color: #078282;\n  background-image: url(${(props: Props) => props.bgImg});\n  background-repeat: repeat;\n`\n\nconst ContentWrap: React.FC = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      bgImg: file(relativePath: { eq: \"background.svg\" }) {\n        publicURL\n      }\n    }\n  `)\n\n  return (\n    <BackGroundWrap bgImg={data.bgImg.publicURL}>{children}</BackGroundWrap>\n  )\n}\n\nexport default ContentWrap\n","import React, { useState } from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\n\nconst HeroContainer = styled.div`\n  position: relative;\n  background-color: #343434;\n`\n\nconst ScaffoldContainer = styled.div`\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  overflow: hidden;\n  div {\n    flex: 0 0 60%;\n  }\n`\n\nconst LogoContainer = styled.div`\n  position: absolute;\n  z-index: 2;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  div {\n    flex: 0 0 60%;\n  }\n`\n\nconst ButtonContainer = styled.div`\n  position: absolute;\n  z-index: 3;\n  top: 0;\n  right: 0;\n`\n\nconst Hero = () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        logo: file(relativePath: { eq: \"logo.svg\" }) {\n          publicURL\n        }\n        scaffold: file(relativePath: { eq: \"scaffold.png\" }) {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        templeNight: file(relativePath: { eq: \"temple_night.png\" }) {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const [isUnderConstruction, setIsUnderConstruction] = useState(true)\n\n  return (\n    <HeroContainer>\n      <ButtonContainer>\n        <button onClick={() => setIsUnderConstruction(!isUnderConstruction)}>\n          {isUnderConstruction ? '竣工' : '建設中'}\n        </button>\n      </ButtonContainer>\n      <LogoContainer>\n        <div>\n          <img src={data.logo.publicURL} alt=\"BADオープンデータ供養寺ロゴ\" />\n        </div>\n      </LogoContainer>\n      <ScaffoldContainer>\n        <div>\n          {isUnderConstruction && (\n            <Img fluid={data.scaffold.childImageSharp.fluid} />\n          )}\n        </div>\n      </ScaffoldContainer>\n      <Img fluid={data.templeNight.childImageSharp.fluid} />\n    </HeroContainer>\n  )\n}\n\nexport default Hero\n","import * as React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport Marquee from '../components/marquee'\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst TextContainer = styled.div`\n  flex: 0 1 auto;\n  padding-right: 12px;\n  overflow: hidden;\n`\n\nconst ImgContainer = styled.div`\n  flex: 1 0 auto;\n  color: #fff;\n  font-size: 12px;\n  text-align: center;\n`\n\nconst DownloadMochi = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      red: file(relativePath: { eq: \"mochi_red_kotobuki.gif\" }) {\n        publicURL\n      }\n      white: file(relativePath: { eq: \"mochi_white_iwai.gif\" }) {\n        publicURL\n      }\n    }\n  `)\n\n  return (\n    <Container>\n      <TextContainer>\n        <Marquee\n          text=\"上棟式にお越しいただき、ありがとうございます。引き出物はこちらです。ぜひお持ち帰りください。→→→→→\"\n          delay=\"1s\"\n          duration=\"20s\"\n        />\n      </TextContainer>\n      <ImgContainer>\n        <span>右クリックでダウンロード</span>\n        <br />\n        <img src={data.red.publicURL} alt=\"餅（赤）\" />\n        <img src={data.white.publicURL} alt=\"餅（白）\" />\n        <img src={data.red.publicURL} alt=\"餅（赤）\" />\n        <img src={data.white.publicURL} alt=\"餅（白）\" />\n        <img src={data.red.publicURL} alt=\"餅（赤）\" />\n        <img src={data.white.publicURL} alt=\"餅（白）\" />\n      </ImgContainer>\n    </Container>\n  )\n}\n\nexport default DownloadMochi\n","import React, { ReactElement, useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nconst AccessCounterContent = styled.div`\n  font-size: 30px;\n`\n\nconst NumberText = styled.span`\n  color: #ebff00;\n  background-color: #000000;\n  padding: 2px 4px;\n  margin: 0 2px;\n  box-sizing: border-box;\n`\n\nconst AccessCounter: React.FC = (): ReactElement => {\n  const [accessStr, setAccessStr] = useState('LOADING')\n  useEffect(() => {\n    fetch(\n      'https://script.google.com/macros/s/AKfycbxNRKPbWajypmgXMrmcwVJCB7uqORyU7MfdLi3O0rIQm98EJCc/exec'\n    )\n      .then(response => {\n        return response.json()\n      })\n      .then(json => {\n        setAccessStr(String(json['your_access']).padStart(4, '0'))\n        return json\n      })\n      .catch(error => {\n        setAccessStr('ERROR')\n      })\n  }, [])\n\n  return (\n    <AccessCounterContent>\n      あなたは\n      {[...accessStr].map((str, index) => {\n        return <NumberText key={str + String(index)}>{str}</NumberText>\n      })}\n      人目の参拝者です\n    </AccessCounterContent>\n  )\n}\n\nexport default AccessCounter\n","import * as React from 'react'\nimport styled from 'styled-components'\n\nconst Content = styled.div`\n  font-size: 30px;\n`\n\nconst NumberText = styled.span`\n  color: #ebff00;\n  background-color: #000000;\n  padding: 2px 4px;\n  margin: 0 2px;\n  box-sizing: border-box;\n`\n\nconst DaysFromFoundation = () => {\n  const START_TIME = new Date('2020-11-14').getTime()\n  const CURRENT_TIME = Date.now()\n  const TIME_DIFF = CURRENT_TIME - START_TIME\n  const daysFromStr = String(Math.floor(TIME_DIFF / (1000 * 60 * 60 * 24)))\n\n  return (\n    <Content>\n      建立から\n      {[...daysFromStr].map((str, index) => {\n        return <NumberText key={str + String(index)}>{str}</NumberText>\n      })}\n      日目です\n    </Content>\n  )\n}\n\nexport default DaysFromFoundation\n","import * as React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { useBreakpoint } from 'gatsby-plugin-breakpoints'\nimport styled from 'styled-components'\n\ntype Props = {\n  isMobile: boolean\n}\n\nconst RandomWordWrap = styled.div.attrs((props: Props) => ({\n  isMobile: props.isMobile,\n}))`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: ${props => (props.isMobile ? 'column' : 'row')};\n`\n\nconst FlexWrap = styled.div.attrs((props: Props) => ({\n  isMobile: props.isMobile,\n}))`\n  flex: 0 0 ${props => (props.isMobile ? '100%' : '50%')};\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`\n\nconst ImgWrap = styled.div`\n  padding: 16px;\n`\n\nconst Title = styled.h2`\n  font-size: 30px;\n  font-weight: normal;\n  margin: 0 16px;\n`\n\nconst ParagraphWrap = styled.div.attrs((props: Props) => ({\n  isMobile: props.isMobile,\n}))`\n  flex: 0 0 ${props => (props.isMobile ? '100%' : '50%')};\n  display: flex;\n  align-content: center;\n  background-color: #30f3ff;\n  box-shadow: 4px 4px rgb(0, 0, 0, 0.75);\n  p {\n    padding: 16px;\n  }\n`\n\nconst RandomWord = () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allHitokotoCsv {\n          nodes {\n            word\n          }\n        }\n        file(relativePath: { eq: \"jushoku.gif\" }) {\n          publicURL\n        }\n      }\n    `\n  )\n  const breakpoints = useBreakpoint()\n  const node = data.allHitokotoCsv.nodes\n  const number = Math.floor(Math.random() * node.length)\n\n  return (\n    <RandomWordWrap isMobile={breakpoints.sm}>\n      <FlexWrap>\n        <ImgWrap>\n          <img src={data.file.publicURL} alt=\"住職\" />\n        </ImgWrap>\n        <Title>今日の住職のひとこと</Title>\n      </FlexWrap>\n      <ParagraphWrap isMobile={breakpoints.sm}>\n        <p>{node[number].word}</p>\n      </ParagraphWrap>\n    </RandomWordWrap>\n  )\n}\n\nexport default RandomWord\n","import * as React from 'react'\nimport { useStaticQuery, graphql, Link } from 'gatsby'\nimport styled from 'styled-components'\n\ninterface InformationData {\n  allInformationCsv: {\n    nodes: [\n      {\n        date: string\n        text: string\n        url: string\n      }\n    ]\n  }\n}\n\nconst Title = styled.h2`\n  color: #ebff00;\n  border-bottom: 5px ridge #ccc;\n  padding: 12px 0;\n`\n\nconst List = styled.ul`\n  border: 2px solid #00d645;\n  padding: 0;\n`\n\nconst Item = styled.li`\n  display: flex;\n  align-items: center;\n  background-color: #4ca6a6;\n  border-bottom: 2px solid #00d645;\n  &:last-child {\n    border-bottom: none;\n  }\n  &:nth-child(even) {\n    color: #fff;\n    background-color: #000;\n    a {\n      color: #fff;\n    }\n  }\n`\n\nconst ItemChild = styled.div`\n  padding: 12px;\n`\n\nconst ItemChildDate = styled(ItemChild)`\n  flex: 0 0 6em;\n`\n\nconst ItemChildText = styled(ItemChild)`\n  flex: 1 1 auto;\n  border-left: 2px solid #00d645;\n  p {\n    margin: 0;\n  }\n`\n\nconst Information = () => {\n  const data: InformationData = useStaticQuery(\n    graphql`\n      query {\n        allInformationCsv(limit: 5, sort: { fields: date, order: DESC }) {\n          nodes {\n            date\n            text\n            url\n          }\n        }\n      }\n    `\n  )\n\n  const informationItems = data.allInformationCsv.nodes.map((node, index) => {\n    const text = `${node.text} 🙏`\n    return (\n      <Item key={index}>\n        <ItemChildDate>\n          <time>{node.date}</time>\n        </ItemChildDate>\n        <ItemChildText>\n          {!node.url ? (\n            <p>{text}</p>\n          ) : /^https?:\\/\\//.test(node.url) ? (\n            <a href={node.url}>{text}</a>\n          ) : (\n            <Link to={node.url}>{text}</Link>\n          )}\n        </ItemChildText>\n      </Item>\n    )\n  })\n\n  return (\n    <div>\n      <Title>お知らせ</Title>\n      <List>{informationItems}</List>\n    </div>\n  )\n}\n\nexport default Information\n","import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { useBreakpoint } from 'gatsby-plugin-breakpoints'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\nimport '../components/layout.css'\nimport ContentWrap from '../components/contentWrap'\nimport GlobalNavigation from '../components/globalNavigation'\nimport Header from '../components/header'\nimport Hero from '../components/hero'\nimport DownloadMochi from '../components/downloadMochi'\nimport Marquee from '../components/marquee'\nimport AccessCounter from '../components/accessCounter'\nimport DaysFromFoundation from '../components/daysFromFoundation'\nimport RandomWord from '../components/randomWord'\nimport Information from '../components/information'\nimport Footer from '../components/footer'\n\nconst Container = styled.div`\n  margin: 0 auto;\n  max-width: 1080px;\n`\n\nconst MainContents = styled.div`\n  padding: 30px 30px 60px;\n`\n\nconst CatchTextWrap = styled.div`\n  background-color: #ffa927;\n  box-shadow: 6px 6px rgb(0, 0, 0, 0.75);\n  padding: 20px;\n  p {\n    margin: 0;\n    text-align: center;\n    font-size: 22px;\n    line-height: 1.8;\n  }\n`\n\nconst ComponentWrap = styled.div`\n  margin: 30px 0;\n`\n\nconst FlexWrap = styled.div.attrs((props: IndexPageProps) => ({\n  isMobile: props.isMobile,\n}))`\n  display: flex;\n  justify-content: space-around;\n  flex-direction: ${props => (props.isMobile ? 'column' : 'row')};\n  > * {\n    margin: 16px;\n  }\n`\n\ninterface IndexPageProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n      }\n    }\n  }\n  isMobile: boolean\n}\n\nconst IndexPage: React.FC<IndexPageProps> = ({ data }) => {\n  const breakpoints = useBreakpoint()\n\n  return (\n    <div>\n      <Helmet\n        title={data.site.siteMetadata.title}\n        meta={[\n          { name: 'description', content: data.site.siteMetadata.description },\n        ]}\n      />\n      <Container>\n        <Header />\n        <Hero />\n        <DownloadMochi />\n        <GlobalNavigation />\n        <ContentWrap>\n          <main>\n            <Marquee text=\"BADデータを作ってしまうとその除霊や供養にはその何倍ものコストがかかります。お金は大切に。\" />\n            <MainContents>\n              <CatchTextWrap>\n                <p>\n                  BADオープンデータ供養寺は、\n                  <br />\n                  世の中に災厄をもたらすBADなオープンデータが二度とこの世を彷徨わないように\n                  <br />\n                  「供養（データクレンジング）」するために建立されました。\n                </p>\n              </CatchTextWrap>\n              <ComponentWrap>\n                <FlexWrap isMobile={breakpoints.sm}>\n                  <AccessCounter />\n                  <DaysFromFoundation />\n                </FlexWrap>\n              </ComponentWrap>\n              <ComponentWrap>\n                <RandomWord />\n              </ComponentWrap>\n              <ComponentWrap>\n                <Information />\n              </ComponentWrap>\n              <Link to=\"/page-2/\">Go to page 2</Link>\n            </MainContents>\n          </main>\n        </ContentWrap>\n        <Footer />\n      </Container>\n    </div>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`\n","import * as React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\ntype Props = {\n  text: string\n  duration?: string\n  delay?: string\n}\n\nconst MarqueeWrap = styled.div`\n  padding: 16px 0;\n  overflow: hidden;\n  background-color: #000;\n  position: relative;\n`\nconst marqueeAnimation = keyframes`\n  from   { transform: translate(0%);}\n  99%,to { transform: translate(-100%);}\n`\nconst Paragraph = styled.p`\n  color: #00ff22;\n  margin: 0;\n  padding-left: 100%;\n  display: inline-block;\n  white-space: nowrap;\n  animation-name: ${marqueeAnimation};\n  animation-timing-function: linear;\n  animation-duration: ${(props: Props) => props.duration || '18s'};\n  animation-iteration-count: infinite;\n  animation-delay: ${(props: Props) => props.delay || '0s'};\n  &::after {\n    content: '';\n    white-space: nowrap;\n    padding-right: 50px;\n  }\n`\n\nconst Marquee = (props: Props) => {\n  return (\n    <MarqueeWrap>\n      <Paragraph {...props}>{props.text}</Paragraph>\n    </MarqueeWrap>\n  )\n}\n\nexport default Marquee\n","\"use strict\";\n\nexports.__esModule = true;\n\nvar _BreakpointProvider = require(\"./BreakpointProvider\");\n\nexports.useBreakpoint = _BreakpointProvider.useBreakpoint;\nexports.BreakpointProvider = _BreakpointProvider.BreakpointProvider;\n\nvar _withBreakpoints = require(\"./withBreakpoints\");\n\nexports.withBreakpoints = _withBreakpoints.withBreakpoints;"],"sourceRoot":""}