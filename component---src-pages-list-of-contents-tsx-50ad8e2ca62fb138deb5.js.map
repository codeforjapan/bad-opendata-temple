{"version":3,"sources":["webpack:///./src/components/layout.tsx","webpack:///./src/components/listOfContents.tsx","webpack:///./src/components/listOfKuyouCases.tsx","webpack:///./src/pages/list-of-contents.tsx"],"names":["Container","styled","div","MainContents","Layout","children","ContentsList","ul","ContentsListItem","li","ListOfContents","props","listItems","contents","map","item","index","key","href","frontmatter","slug","title","date","fields","data","Title","Date","Name","ListOfContentsPage","pageTitle","className","allAirtable","edges","node","allMarkdownRemark","pageQuery"],"mappings":"8FAAA,gEAOMA,GAPN,UAOkBC,IAAOC,IAAV,oEAAGD,CAAH,4DAMTE,EAAeF,IAAOC,IAAV,uEAAGD,CAAH,6BAuBHG,IAfgB,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SAChC,OACE,gCACE,gBAACL,EAAD,KACE,gBAAC,IAAD,MACA,gBAAC,IAAD,MACA,4BACE,gBAACG,EAAD,KAAeE,IAEjB,gBAAC,IAAD,U,uJC3BFC,EAAeL,IAAOM,GAAV,+EAAGN,CAAH,iDAMZO,EAAmBP,IAAOQ,GAAV,mFAAGR,CAAH,oBAiBP,SAASS,EAAeC,GACrC,IAAMC,EAAYD,EAAME,SAASC,KAAI,SAACC,EAAMC,GAAP,OACnC,gBAACR,EAAD,CAAkBS,IAAKD,GACrB,qBAAGE,KAAMH,EAAKI,YAAaC,MACxBL,EAAKI,YAAaE,MADrB,MAC+BN,EAAKI,YAAaG,UAIrD,OAAO,gBAAChB,EAAD,KAAeM,GC/BxB,IAAMN,EAAeL,IAAOM,GAAV,qFAAGN,CAAH,iDAMZO,EAAmBP,IAAOQ,GAAV,yFAAGR,CAAH,oBAoBP,SAASS,EAAeC,GACrC,IAAMC,EAAYD,EAAME,SAASC,KAAI,SAACC,EAAMC,GAAP,OACnC,gBAAC,EAAD,CAAkBC,IAAKD,GACrB,qBAAGE,KAAMH,EAAKQ,OAAOH,MAClBL,EAAKS,KAAMC,MADd,MACwBV,EAAKS,KAAME,MAC9B,IAHP,MAIMX,EAAKS,KAAMG,SAGnB,OAAO,gBAAC,EAAD,KAAef,G,4BC1BT,SAASgB,EAAT,GAEJ,IADTJ,EACS,EADTA,KAEA,OACE,gCACE,gBAAC,IAAD,CAAMK,UAAU,QAChB,gBAAC,IAAD,KACE,uBAAKC,UAAU,qBACb,0CACA,gBAAC,EAAD,CACEjB,SAAUW,EAAKO,YAAYC,MAAMlB,KAC/B,SAACC,GAAD,OAAUA,EAAKkB,WAIrB,uBAAKH,UAAU,qBACb,wCACA,gBAACpB,EAAD,CACEG,SAAUW,EAAKU,kBAAkBF,MAAMlB,KACrC,SAACC,GAAD,OAAUA,EAAKkB,WAIrB,uBAAKH,UAAU,qBACb,0CACA,8CAEE,qBAAGZ,KAAK,cAAR,YAFF,iBAUH,IAAMiB,EAAY","file":"component---src-pages-list-of-contents-tsx-50ad8e2ca62fb138deb5.js","sourcesContent":["import * as React from 'react'\nimport styled from 'styled-components'\nimport GlobalNavigation from './globalNavigation'\nimport Header from './header'\nimport Footer from './footer'\nimport './layout.css'\n\nconst Container = styled.div`\n  margin: 0 auto;\n  max-width: 1080px;\n  background-color: #fff;\n`\n\nconst MainContents = styled.div`\n  padding: 30px 30px 60px;\n`\n\ninterface Prop {\n  children: React.ReactNode\n}\n\nconst Layout: React.FC<Prop> = ({ children }) => {\n  return (\n    <>\n      <Container>\n        <Header />\n        <GlobalNavigation />\n        <main>\n          <MainContents>{children}</MainContents>\n        </main>\n        <Footer />\n      </Container>\n    </>\n  )\n}\n\nexport default Layout\n","import * as React from 'react'\nimport styled from 'styled-components'\n\nconst ContentsList = styled.ul`\n  list-style: none;\n  margin: 10px 0;\n  padding: 10px;\n`\n\nconst ContentsListItem = styled.li`\n  display: block;\n`\n\ninterface INode {\n  id: string\n  frontmatter?: {\n    title?: string\n    slug?: string\n    date?: string\n  }\n}\n\ninterface IProp {\n  contents: INode[]\n}\n\nexport default function ListOfContents(props: IProp) {\n  const listItems = props.contents.map((item, index) => (\n    <ContentsListItem key={index}>\n      <a href={item.frontmatter!.slug}>\n        {item.frontmatter!.title} - {item.frontmatter!.date}\n      </a>\n    </ContentsListItem>\n  ))\n  return <ContentsList>{listItems}</ContentsList>\n}\n","import * as React from 'react'\nimport styled from 'styled-components'\n\nconst ContentsList = styled.ul`\n  list-style: none;\n  margin: 10px 0;\n  padding: 10px;\n`\n\nconst ContentsListItem = styled.li`\n  display: block;\n`\n\ninterface INode {\n  recordId?: string\n  fields?: {\n    slug?: string\n  }\n  data?: {\n    Title?: string\n    Date?: string\n    Name?: string\n  }\n}\n\ninterface IProp {\n  contents: INode[]\n}\n\nexport default function ListOfContents(props: IProp) {\n  const listItems = props.contents.map((item, index) => (\n    <ContentsListItem key={index}>\n      <a href={item.fields.slug}>\n        {item.data!.Title} - {item.data!.Date}\n      </a>{' '}\n      by {item.data!.Name}\n    </ContentsListItem>\n  ))\n  return <ContentsList>{listItems}</ContentsList>\n}\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport ListOfContents from '../components/listOfContents'\nimport ListOfKuyouCases from '../components/listOfKuyouCases'\nimport Layout from '../components/layout'\nimport { ListOfContentsQueryQuery } from '../../types/graphql-types'\nimport Head from '../components/head'\n\ninterface IProps {\n  data: ListOfContentsQueryQuery\n}\n\nexport default function ListOfContentsPage({\n  data,\n}: IProps) {\n  return (\n    <>\n      <Head pageTitle=\"供養塔\" />\n      <Layout>\n        <div className=\"blog-post-content\">\n          <h2>お納めいただいた供養事例</h2>\n          <ListOfKuyouCases\n            contents={data.allAirtable.edges.map(\n              (item) => item.node\n            )}\n          />\n        </div>\n        <div className=\"blog-post-content\">\n          <h2>当社務所による活動等</h2>\n          <ListOfContents\n            contents={data.allMarkdownRemark.edges.map(\n              (item) => item.node\n            )}\n          />\n        </div>\n        <div className=\"blog-post-content\">\n          <h2>供養事例をお供え下さい！</h2>\n          <div>\n            供養事例をご紹介いただける方は、\n            <a href=\"/kuyouform\">供養事例のご奉納</a>\n            よりご連絡ください。\n          </div>\n        </div>\n      </Layout>\n    </>\n  )\n}\nexport const pageQuery = graphql`\n  query ListOfContentsQuery {\n    allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"s/.+\\\\/markdown\\\\/articles\\\\/[^\\\\/]+\\\\.md/\"}}, sort: {fields: frontmatter___date, order: DESC}) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            slug\n            date\n          }\n        }\n      }\n    },\n    allAirtable(limit: 100\n      filter: {\n        table:{eq: \"cleansing-cases\"}\n      },\n      sort: {fields: data___Date, order: DESC}) {\n        edges{\n          node{\n            fields {\n              slug\n            }\n            recordId\n            data{\n              Title\n              Date\n              Name\n            }\n          }\n        }\n      }\n  }\n`\n"],"sourceRoot":""}