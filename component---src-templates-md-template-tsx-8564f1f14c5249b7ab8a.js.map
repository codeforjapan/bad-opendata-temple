{"version":3,"sources":["webpack:///./src/components/layout.tsx","webpack:///./src/templates/mdTemplate.tsx"],"names":["Container","styled","div","MainContents","Layout","children","data","useStaticQuery","title","site","siteMetadata","meta","name","content","description","Template","markdownRemark","frontmatter","html","className","date","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"8FAAA,6GAUMA,EAAYC,IAAOC,IAAV,oEAAGD,CAAH,2DAMTE,EAAeF,IAAOC,IAAV,uEAAGD,CAAH,6BA8CHG,IAtCgB,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SAC1BC,EAAOC,yBAAe,cAU5B,OACE,2BACE,gBAAC,IAAD,CACEC,MAAOF,EAAKG,KAAKC,aAAaF,MAC9BG,KAAM,CACJ,CACEC,KAAM,cACNC,QAASP,EAAKG,KAAKC,aAAaI,gBAItC,gBAACd,EAAD,KACE,gBAAC,IAAD,MACA,gBAAC,IAAD,MACA,4BACE,gBAACG,EAAD,KAAeE,IAEjB,gBAAC,IAAD,U,kCCpDR,qHASe,SAASU,EAAT,GAAoC,IACzCC,EADyC,EAAhBV,KACzBU,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACrB,OACE,gBAAC,IAAD,KACE,uBAAKC,UAAU,uBACb,uBAAKA,UAAU,aACb,0BAAKF,EAAYT,OACjB,0BAAKS,EAAYG,MACjB,uBACED,UAAU,oBACVE,wBAAyB,CAAEC,OAAQJ,QAOxC,IAAMK,EAAY","file":"component---src-templates-md-template-tsx-8564f1f14c5249b7ab8a.js","sourcesContent":["import * as React from 'react'\nimport Header from './header'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport './layout.css'\nimport PropTypes from 'prop-types'\nimport GlobalNavigation from './globalNavigation'\nimport Footer from './footer'\n\nconst Container = styled.div`\n  margin: 0 auto;\n  max-width: 1080px;\n  background-color: #fff;\n`\n\nconst MainContents = styled.div`\n  padding: 30px 30px 60px;\n`\n\ninterface Prop {\n  children: React.ReactNode\n}\n\nconst Layout: React.FC<Prop> = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitle {\n      site {\n        siteMetadata {\n          title\n          description\n        }\n      }\n    }\n  `)\n  return (\n    <div>\n      <Helmet\n        title={data.site.siteMetadata.title}\n        meta={[\n          {\n            name: 'description',\n            content: data.site.siteMetadata.description,\n          },\n        ]}\n      />\n      <Container>\n        <Header />\n        <GlobalNavigation />\n        <main>\n          <MainContents>{children}</MainContents>\n        </main>\n        <Footer />\n      </Container>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node,\n} as React.WeakValidationMap<Prop>\n\nexport default Layout\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport { BlogTemplateQuery } from '../../types/graphql-types'\nimport Layout from '../components/layout'\n\ninterface IProps {\n  data: BlogTemplateQuery\n}\n\nexport default function Template({ data }: IProps) {\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <div className=\"blog-post-container\">\n        <div className=\"blog-post\">\n          <h1>{frontmatter.title}</h1>\n          <h2>{frontmatter.date}</h2>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n}\nexport const pageQuery = graphql`\n  query BlogTemplate($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}