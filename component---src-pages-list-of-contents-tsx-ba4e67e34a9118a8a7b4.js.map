{"version":3,"sources":["webpack:///./src/components/layout.tsx","webpack:///./src/components/listOfContents.tsx","webpack:///./src/components/listOfKuyouCases.tsx","webpack:///./src/pages/list-of-contents.tsx"],"names":["Container","styled","div","MainContents","Layout","children","data","useStaticQuery","title","site","siteMetadata","meta","name","content","description","ContentsList","ul","ContentsListItem","li","ListOfContents","props","listItems","contents","map","item","index","key","href","frontmatter","slug","date","fields","Title","Date","Name","ListOfContentsPage","className","allAirtable","edges","node","allMarkdownRemark","pageQuery"],"mappings":"8FAAA,6GAUMA,EAAYC,IAAOC,IAAV,oEAAGD,CAAH,2DAMTE,EAAeF,IAAOC,IAAV,uEAAGD,CAAH,6BA8CHG,IAtCgB,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SAC1BC,EAAOC,yBAAe,cAU5B,OACE,2BACE,gBAAC,IAAD,CACEC,MAAOF,EAAKG,KAAKC,aAAaF,MAC9BG,KAAM,CACJ,CACEC,KAAM,cACNC,QAASP,EAAKG,KAAKC,aAAaI,gBAItC,gBAACd,EAAD,KACE,gBAAC,IAAD,MACA,gBAAC,IAAD,MACA,4BACE,gBAACG,EAAD,KAAeE,IAEjB,gBAAC,IAAD,U,uJCjDFU,EAAed,IAAOe,GAAV,+EAAGf,CAAH,iDAMZgB,EAAmBhB,IAAOiB,GAAV,mFAAGjB,CAAH,oBAiBP,SAASkB,EAAeC,GACrC,IAAMC,EAAYD,EAAME,SAASC,KAAI,SAACC,EAAMC,GAAP,OACnC,gBAACR,EAAD,CAAkBS,IAAKD,GACrB,qBAAGE,KAAMH,EAAKI,YAAaC,MACxBL,EAAKI,YAAapB,MADrB,MAC+BgB,EAAKI,YAAaE,UAIrD,OAAO,gBAACf,EAAD,KAAeM,GC/BxB,IAAMN,EAAed,IAAOe,GAAV,qFAAGf,CAAH,iDAMZgB,EAAmBhB,IAAOiB,GAAV,yFAAGjB,CAAH,oBAoBP,SAASkB,EAAeC,GACrC,IAAMC,EAAYD,EAAME,SAASC,KAAI,SAACC,EAAMC,GAAP,OACnC,gBAAC,EAAD,CAAkBC,IAAKD,GACrB,qBAAGE,KAAMH,EAAKO,OAAOF,MAClBL,EAAKlB,KAAM0B,MADd,MACwBR,EAAKlB,KAAM2B,MAC9B,IAHP,MAIMT,EAAKlB,KAAM4B,SAGnB,OAAO,gBAAC,EAAD,KAAeb,G,gBC3BT,SAASc,EAAT,GAEJ,IADT7B,EACS,EADTA,KAEA,OACE,gBAAC,IAAD,KACE,uBAAK8B,UAAU,qBACb,0CACA,gBAAC,EAAD,CACEd,SAAUhB,EAAK+B,YAAYC,MAAMf,KAC/B,SAACC,GAAD,OAAUA,EAAKe,WAIrB,uBAAKH,UAAU,qBACb,wCACA,gBAACjB,EAAD,CACEG,SAAUhB,EAAKkC,kBAAkBF,MAAMf,KACrC,SAACC,GAAD,OAAUA,EAAKe,WAIrB,uBAAKH,UAAU,qBACb,0CACA,8CAEE,qBAAGT,KAAK,cAAR,YAFF,gBASD,IAAMc,EAAY","file":"component---src-pages-list-of-contents-tsx-ba4e67e34a9118a8a7b4.js","sourcesContent":["import * as React from 'react'\nimport Header from './header'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport './layout.css'\nimport PropTypes from 'prop-types'\nimport GlobalNavigation from './globalNavigation'\nimport Footer from './footer'\n\nconst Container = styled.div`\n  margin: 0 auto;\n  max-width: 1080px;\n  background-color: #fff;\n`\n\nconst MainContents = styled.div`\n  padding: 30px 30px 60px;\n`\n\ninterface Prop {\n  children: React.ReactNode\n}\n\nconst Layout: React.FC<Prop> = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitle {\n      site {\n        siteMetadata {\n          title\n          description\n        }\n      }\n    }\n  `)\n  return (\n    <div>\n      <Helmet\n        title={data.site.siteMetadata.title}\n        meta={[\n          {\n            name: 'description',\n            content: data.site.siteMetadata.description,\n          },\n        ]}\n      />\n      <Container>\n        <Header />\n        <GlobalNavigation />\n        <main>\n          <MainContents>{children}</MainContents>\n        </main>\n        <Footer />\n      </Container>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node,\n} as React.WeakValidationMap<Prop>\n\nexport default Layout\n","import * as React from 'react'\nimport styled from 'styled-components'\n\nconst ContentsList = styled.ul`\n  list-style: none;\n  margin: 10px 0;\n  padding: 10px;\n`\n\nconst ContentsListItem = styled.li`\n  display: block;\n`\n\ninterface INode {\n  id: string\n  frontmatter?: {\n    title?: string\n    slug?: string\n    date?: string\n  }\n}\n\ninterface IProp {\n  contents: INode[]\n}\n\nexport default function ListOfContents(props: IProp) {\n  const listItems = props.contents.map((item, index) => (\n    <ContentsListItem key={index}>\n      <a href={item.frontmatter!.slug}>\n        {item.frontmatter!.title} - {item.frontmatter!.date}\n      </a>\n    </ContentsListItem>\n  ))\n  return <ContentsList>{listItems}</ContentsList>\n}\n","import * as React from 'react'\nimport styled from 'styled-components'\n\nconst ContentsList = styled.ul`\n  list-style: none;\n  margin: 10px 0;\n  padding: 10px;\n`\n\nconst ContentsListItem = styled.li`\n  display: block;\n`\n\ninterface INode {\n  recordId?: string\n  fields?: {\n    slug?: string\n  }\n  data?: {\n    Title?: string\n    Date?: string\n    Name?: string\n  }\n}\n\ninterface IProp {\n  contents: INode[]\n}\n\nexport default function ListOfContents(props: IProp) {\n  const listItems = props.contents.map((item, index) => (\n    <ContentsListItem key={index}>\n      <a href={item.fields.slug}>\n        {item.data!.Title} - {item.data!.Date}\n      </a>{' '}\n      by {item.data!.Name}\n    </ContentsListItem>\n  ))\n  return <ContentsList>{listItems}</ContentsList>\n}\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport ListOfContents from '../components/listOfContents'\nimport ListOfKuyouCases from '../components/listOfKuyouCases'\nimport Layout from '../components/layout'\nimport { ListOfContentsQueryQuery } from '../../types/graphql-types'\n\ninterface IProps {\n  data: ListOfContentsQueryQuery\n}\n\nexport default function ListOfContentsPage({\n  data,\n}: IProps) {\n  return (\n    <Layout>\n      <div className=\"blog-post-content\">\n        <h2>お納めいただいた供養事例</h2>\n        <ListOfKuyouCases\n          contents={data.allAirtable.edges.map(\n            (item) => item.node\n          )}\n        />\n      </div>\n      <div className=\"blog-post-content\">\n        <h2>当社務所による活動等</h2>\n        <ListOfContents\n          contents={data.allMarkdownRemark.edges.map(\n            (item) => item.node\n          )}\n        />\n      </div>\n      <div className=\"blog-post-content\">\n        <h2>供養事例をお供え下さい！</h2>\n        <div>\n          供養事例をご紹介いただける方は、\n          <a href=\"/kuyouform\">供養事例のご奉納</a>\n          よりご連絡ください。\n        </div>\n      </div>\n    </Layout>\n  )\n}\nexport const pageQuery = graphql`\n  query ListOfContentsQuery {\n    allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"s/.+\\\\/markdown\\\\/articles\\\\/[^\\\\/]+\\\\.md/\"}}, sort: {fields: frontmatter___date, order: DESC}) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            slug\n            date\n          }\n        }\n      }\n    },\n    allAirtable(limit: 100\n      filter: {\n        table:{eq: \"cleansing-cases\"}\n      }) {\n        edges{\n          node{\n            fields {\n              slug\n            }\n            recordId\n            data{\n              Title\n              Date\n              Name\n            }\n          }\n        }\n      }\n  }\n`\n"],"sourceRoot":""}